<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="yyj.dao.CityidTransforDao">
	<insert id="addCityidTransfor" parameterType="yyj.entity.CityidTransfor">
		insert into t_cityid_transfor
		(lx_cityid,ic_cityid,insurance_company,create_time)
		values
		(
			<if test="lxCityid != null">#{lxCityid},</if>
			<if test="lxCityid == null">default,</if>
			<if test="icCityid != null">#{icCityid},</if>
			<if test="icCityid == null">default,</if>
			<if test="insuranceCompany != null">#{insuranceCompany},</if>
			<if test="insuranceCompany == null">default,</if>
			<if test="createTime != null">#{createTime},</if>
			<if test="createTime == null">default,</if>
		)
	</insert>
	<delete id="deleteCityidTransforByClass" parameterType="yyj.entity.CityidTransfor">
		delete from t_cityid_transfor
		<where>
			<if test="lxCityid != null"> and lx_cityid = #{lxCityid}  </if>
			<if test="icCityid != null"> and ic_cityid = #{icCityid}  </if>
			<if test="insuranceCompany != null"> and insurance_company = #{insuranceCompany}  </if>
			<if test="createTime != null"> and create_time = #{createTime}  </if>
		</where>
	</delete>
	<delete id="deleteCityidTransforByUniqueIndexOnLxCityidAndInsuranceCompany">
		delete from t_cityid_transfor
		<where>
			AND lx_cityid = #{lxCityid}
			AND insurance_company = #{insuranceCompany}
		</where>
	</delete>
	<update id="updateCityidTransforByClass">
		update t_cityid_transfor
		<set>
			lx_cityid={cityidTransfor.lxCityid},
			ic_cityid={cityidTransfor.icCityid},
			insurance_company={cityidTransfor.insuranceCompany},
			create_time={cityidTransfor.createTime}
		</set>
		<where>
			<if test="lxCityid != null">lx_cityid = #{param.lxCityid},</if>
			<if test="icCityid != null">ic_cityid = #{param.icCityid},</if>
			<if test="insuranceCompany != null">insurance_company = #{param.insuranceCompany},</if>
			<if test="createTime != null">create_time = #{param.createTime},</if>
		</where>
	</update>
	<update id="updateCityidTransforByUniqueIndexOnLxCityidAndInsuranceCompany">
		update t_cityid_transfor
		<set>
			lx_cityid={cityidTransfor.lxCityid},
			ic_cityid={cityidTransfor.icCityid},
			insurance_company={cityidTransfor.insuranceCompany},
			create_time={cityidTransfor.createTime}
		</set>
		<where>
			AND lx_cityid={lxCityid}
			AND insurance_company={insuranceCompany}
		</where>
	</update>
	<select id="selectCityidTransforByClass" resultMap="cityidTransforMap"  resultType="yyj.entity.CityidTransfor" parameterType="yyj.entity.CityidTransfor">
		select
			lx_cityid,ic_cityid,insurance_company,create_time
		from t_cityid_transfor
		<where>
			<if test="lxCityid != null">lx_cityid = #{lxCityid},</if>
			<if test="icCityid != null">ic_cityid = #{icCityid},</if>
			<if test="insuranceCompany != null">insurance_company = #{insuranceCompany},</if>
			<if test="createTime != null">create_time = #{createTime},</if>
		</where>
	</select>
	<select id="selectCityidTransforByUniqueIndexOnLxCityidAndInsuranceCompany" resultType="yyj.entity.CityidTransfor" resultMap="cityidTransforMap" >
		select
			lx_cityid,ic_cityid,insurance_company,create_time
		from t_cityid_transfor
		<where>
			AND lx_cityid={lxCityid}
			AND insurance_company={insuranceCompany}
		</where>
	</select>
	<resultMap id="cityidTransforMap" type="yyj.entity.CityidTransfor">
		<result property="lxCityid" 			column="lx_cityid"></result>
		<result property="icCityid" 			column="ic_cityid"></result>
		<result property="insuranceCompany" 			column="insurance_company"></result>
		<result property="createTime" 			column="create_time"></result>
	</resultMap>
</mapper>
